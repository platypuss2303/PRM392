Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"UserRegistrationScreen\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"TopBar\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 40d57ae8197c09f02789a84796e9967bb9ebd6a6)
+++ b/.idea/deploymentTargetSelector.xml	(date 1758534092196)
@@ -5,12 +5,6 @@
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
       </SelectionState>
-      <SelectionState runConfigName="UserRegistrationScreen">
-        <option name="selectionMode" value="DROPDOWN" />
-      </SelectionState>
-      <SelectionState runConfigName="TopBar">
-        <option name="selectionMode" value="DROPDOWN" />
-      </SelectionState>
     </selectionStates>
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/example/whatsapp/presentation/callscreen/FavoritesItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/whatsapp/presentation/callscreen/FavoritesItem.kt b/app/src/main/java/com/example/whatsapp/presentation/callscreen/FavoritesItem.kt
new file mode 100644
--- /dev/null	(date 1758553101160)
+++ b/app/src/main/java/com/example/whatsapp/presentation/callscreen/FavoritesItem.kt	(date 1758553101160)
@@ -0,0 +1,49 @@
+package com.example.whatsapp.presentation.callscreen
+
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.shape.CircleShape
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.layout.ContentScale
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import com.example.whatsapp.R
+
+@Composable
+
+fun FavoritesItem(favorites: FavoritesContact) {
+    Column(
+        horizontalAlignment = Alignment.CenterHorizontally,
+        modifier = Modifier.padding(start = 4.dp, top = 4.dp, end = 12.dp)
+    ) {
+        Image(
+            painter = painterResource(favorites.image),
+            contentDescription = null,
+            modifier = Modifier
+                .size(60.dp)
+                .clip(CircleShape),
+            contentScale = ContentScale.Crop
+        )
+        Spacer(modifier = Modifier.height(4.dp))
+        Text(
+            text = favorites.name,
+            fontSize = 14.sp,
+            fontWeight = FontWeight.Medium,
+            color = Color.Black
+        )
+    }
+
+}
+
Index: app/src/main/java/com/example/whatsapp/presentation/callscreen/CallScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/whatsapp/presentation/callscreen/CallScreen.kt b/app/src/main/java/com/example/whatsapp/presentation/callscreen/CallScreen.kt
new file mode 100644
--- /dev/null	(date 1758642523696)
+++ b/app/src/main/java/com/example/whatsapp/presentation/callscreen/CallScreen.kt	(date 1758642523696)
@@ -0,0 +1,224 @@
+package com.example.whatsapp.presentation.callscreen
+
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.layout.statusBarsPadding
+import androidx.compose.foundation.lazy.LazyColumn
+import androidx.compose.foundation.lazy.items
+import androidx.compose.material3.Button
+import androidx.compose.material3.ButtonDefaults
+import androidx.compose.material3.DropdownMenu
+import androidx.compose.material3.DropdownMenuItem
+import androidx.compose.material3.FloatingActionButton
+import androidx.compose.material3.HorizontalDivider
+import androidx.compose.material3.Icon
+import androidx.compose.material3.IconButton
+import androidx.compose.material3.Scaffold
+import androidx.compose.material3.Text
+import androidx.compose.material3.TextField
+import androidx.compose.material3.TextFieldDefaults
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.res.colorResource
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import com.example.whatsapp.R
+import com.example.whatsapp.presentation.bottomnavigation.BottomNavigation
+
+@Composable
+@Preview(showSystemUi = true)
+fun CallScreen() {
+    val sampleCall = listOf(
+        Call(
+            image = R.drawable.bhuvan_bam,
+            name = "Bhuvan Bam",
+            time = "Yesterday, 10:00 AM",
+            isMissed = true
+        ),
+        Call(
+            image = R.drawable.ashish_chanchlani,
+            name = "Ashish Chanchlani",
+            time = "9:30 AM",
+            isMissed = false
+        ),
+        Call(
+            image = R.drawable.mrbeast,
+            name = "Mr Beast",
+            time = "Yesterday, 10:00 AM",
+            isMissed = true
+        ),
+        Call(
+            image = R.drawable.akshay_kumar,
+            name = "Akshay Kumar",
+            time = "Nov, 10:04 AM",
+            isMissed = true
+        ),
+        Call(
+            image = R.drawable.sharukh_khan,
+            name = "Sharukh Khan",
+            time = "Yesterday, 10:00 AM",
+            isMissed = true
+        ),
+        Call(
+            image = R.drawable.bhuvan_bam,
+            name = "Bhuvan Bam",
+            time = "Yesterday, 10:00 AM",
+            isMissed = true
+        )
+
+
+    )
+
+    Scaffold(
+        topBar = {
+            var isSearching by remember { mutableStateOf(false) }
+            var search by remember { mutableStateOf("") }
+            var showMenu by remember { mutableStateOf(false) }
+            Box(
+                modifier = Modifier
+                    .fillMaxWidth()
+                    .statusBarsPadding()
+            ) {
+                Column {
+                    Row {
+                        if (isSearching) {
+                            TextField(
+                                value = search, onValueChange = {
+                                    search = it
+                                }, placeholder = {
+                                    Text(text = "Search", color = Color.Gray)
+                                }, colors = TextFieldDefaults.colors(
+                                    focusedIndicatorColor = Color.Transparent,
+                                    unfocusedIndicatorColor = Color.Transparent,
+                                    unfocusedContainerColor = Color.Transparent,
+                                    focusedContainerColor = Color.Transparent
+                                ), modifier = Modifier.padding(start = 12.dp), singleLine = true
+                            )
+                        } else {
+                            Text(
+                                text = "Call",
+                                fontSize = 28.sp,
+                                color = Color.Black,
+                                fontWeight = FontWeight.Bold,
+                                modifier = Modifier.padding(start = 12.dp, top = 4.dp)
+                            )
+
+                        }
+                        Spacer(modifier = Modifier.weight(1f))
+                        if (isSearching) {
+                            IconButton(onClick = {
+                                isSearching = false
+                                search = ""
+                            }) {
+                                Icon(
+                                    painter = painterResource(id = R.drawable.cross),
+                                    contentDescription = null,
+                                    modifier = Modifier.size(15.dp)
+                                )
+                            }
+                        } else {
+                            IconButton(onClick = { isSearching = true }) {
+                                Icon(
+                                    painter = painterResource(id = R.drawable.search),
+                                    contentDescription = null,
+                                    modifier = Modifier.size(24.dp)
+                                )
+                            }
+
+                            IconButton(onClick = {
+                                showMenu = !showMenu
+                            }) {
+                                Icon(
+                                    painter = painterResource(id = R.drawable.more),
+                                    contentDescription = null,
+                                    modifier = Modifier.size(24.dp)
+                                )
+                                DropdownMenu(
+                                    expanded = showMenu,
+                                    onDismissRequest = { showMenu = false }) {
+                                    DropdownMenuItem(
+                                        text = { Text(text = "Status Privacy") },
+                                        onClick = { showMenu = false })
+                                    DropdownMenuItem(
+                                        text = { Text(text = "Create Channel") },
+                                        onClick = { showMenu = false })
+                                    DropdownMenuItem(
+                                        text = { Text(text = "Settings") },
+                                        onClick = { showMenu = false })
+                                }
+
+                            }
+
+
+                        }
+                    }
+                    HorizontalDivider()
+                }
+            }
+        },
+        bottomBar = { BottomNavigation() },
+        floatingActionButton = {
+
+            FloatingActionButton(
+                onClick = {}, containerColor = colorResource(id = R.color.light_green),
+                modifier = Modifier.size(65.dp),
+                contentColor = Color.White
+            ) {
+                Icon(
+                    painter = painterResource(id = R.drawable.add_call),
+                    contentDescription = null
+                )
+
+            }
+        }
+
+    ) {
+        Column(modifier = Modifier.padding(it)) {
+            Spacer(modifier = Modifier.height(16.dp))
+            FavoritesSection()
+            Button(
+                onClick = {},
+                colors = ButtonDefaults.buttonColors(containerColor = colorResource(id = R.color.light_green)),
+                modifier = Modifier
+                    .fillMaxWidth()
+                    .padding(16.dp)
+            ) {
+                Text(
+                    text = "Start a new call",
+                    fontSize = 17.sp,
+                    fontWeight = FontWeight.Bold,
+                    color = Color.White
+                )
+
+            }
+            Spacer(modifier = Modifier.height(8.dp))
+            Text(
+                text = "Recent Calls",
+                fontSize = 20.sp,
+                fontWeight = FontWeight.Bold,
+                color = Color.Black,
+                modifier = Modifier.padding(horizontal = 16.dp, vertical = 8.dp)
+            )
+//            LazyColumn {
+//                items(sampleCall) {
+//                    CallItemDesign(call = it)
+//                }
+//            }
+        }
+    }
+}
Index: app/src/main/java/com/example/whatsapp/presentation/callscreen/CallItemDesign.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/whatsapp/presentation/callscreen/CallItemDesign.kt b/app/src/main/java/com/example/whatsapp/presentation/callscreen/CallItemDesign.kt
new file mode 100644
--- /dev/null	(date 1758643087222)
+++ b/app/src/main/java/com/example/whatsapp/presentation/callscreen/CallItemDesign.kt	(date 1758643087222)
@@ -0,0 +1,72 @@
+package com.example.whatsapp.presentation.callscreen
+
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.layout.width
+import androidx.compose.foundation.shape.CircleShape
+import androidx.compose.material3.Icon
+import androidx.compose.material3.IconButton
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.res.colorResource
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import com.example.whatsapp.R
+
+@Composable
+
+fun CallItemDesign(call: Call) {
+
+    Row(
+        modifier = Modifier
+            .fillMaxWidth()
+            .padding(12.dp),
+        verticalAlignment = Alignment.CenterVertically,
+    ) {
+        Image(
+            painter = painterResource(call.image),
+            contentDescription = "Ashish Chanchlani",
+            modifier = Modifier
+                .size(60.dp)
+                .clip(shape = CircleShape)
+        )
+        Spacer(modifier = Modifier.width(12.dp))
+        Column {
+            Text(text = call.name, fontWeight = FontWeight.Bold, fontSize = 18.sp)
+            Row {
+                Icon(
+                    painter = painterResource(id = R.drawable.baseline_call_missed_24),
+                    contentDescription = null, modifier = Modifier.size(16.dp),
+                    tint = if (call.isMissed) Color.Red else colorResource(id = R.color.light_green)
+                )
+                Spacer(modifier = Modifier.width(4.dp))
+                Text(text = call.time, color = Color.Gray, fontSize = 16.sp)
+            }
+        }
+        Box(modifier = Modifier.fillMaxWidth()) {
+
+
+            IconButton(onClick = {}, modifier = Modifier.align(Alignment.CenterEnd)) {
+                Icon(
+                    painter = painterResource(id = R.drawable.telephone),
+                    contentDescription = null,
+                    modifier = Modifier.size(24.dp)
+                )
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/add_call.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/add_call.xml b/app/src/main/res/drawable/add_call.xml
new file mode 100644
--- /dev/null	(date 1732512049393)
+++ b/app/src/main/res/drawable/add_call.xml	(date 1732512049393)
@@ -0,0 +1,5 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:tint="#000000" android:viewportHeight="24" android:viewportWidth="24" android:width="24dp">
+      
+    <path android:fillColor="@android:color/white" android:pathData="M20,15.5c-1.25,0 -2.45,-0.2 -3.57,-0.57 -0.35,-0.11 -0.74,-0.03 -1.02,0.24l-2.2,2.2c-2.83,-1.44 -5.15,-3.75 -6.59,-6.59l2.2,-2.21c0.28,-0.26 0.36,-0.65 0.25,-1C8.7,6.45 8.5,5.25 8.5,4c0,-0.55 -0.45,-1 -1,-1H4c-0.55,0 -1,0.45 -1,1 0,9.39 7.61,17 17,17 0.55,0 1,-0.45 1,-1v-3.5c0,-0.55 -0.45,-1 -1,-1zM21,6h-3V3h-2v3h-3v2h3v3h2V8h3z"/>
+    
+</vector>
Index: app/src/main/res/drawable/baseline_call_missed_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_call_missed_24.xml b/app/src/main/res/drawable/baseline_call_missed_24.xml
new file mode 100644
--- /dev/null	(date 1732512049677)
+++ b/app/src/main/res/drawable/baseline_call_missed_24.xml	(date 1732512049677)
@@ -0,0 +1,5 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:autoMirrored="true" android:height="24dp" android:tint="#000000" android:viewportHeight="24" android:viewportWidth="24" android:width="24dp">
+      
+    <path android:fillColor="@android:color/white" android:pathData="M19.59,7L12,14.59 6.41,9H11V7H3v8h2v-4.59l7,7 9,-9z"/>
+    
+</vector>
Index: app/src/main/java/com/example/whatsapp/presentation/callscreen/FavoritesSection.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/whatsapp/presentation/callscreen/FavoritesSection.kt b/app/src/main/java/com/example/whatsapp/presentation/callscreen/FavoritesSection.kt
new file mode 100644
--- /dev/null	(date 1758552194910)
+++ b/app/src/main/java/com/example/whatsapp/presentation/callscreen/FavoritesSection.kt	(date 1758552194910)
@@ -0,0 +1,56 @@
+package com.example.whatsapp.presentation.callscreen
+
+import androidx.compose.foundation.horizontalScroll
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.rememberScrollState
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import com.example.whatsapp.R
+
+@Composable
+@Preview(showSystemUi = true)
+fun FavoritesSection() {
+    val sampleFavorites = listOf(
+        FavoritesContact(image = R.drawable.ashish_chanchlani, name = "Ashish Chanchlani"),
+        FavoritesContact(image = R.drawable.mrbeast, name = "Mr Beast"),
+        FavoritesContact(image = R.drawable.akshay_kumar, name = "Akshay Kumar"),
+        FavoritesContact(image = R.drawable.bhuvan_bam, name = "Bhuvan Bam"),
+        FavoritesContact(image = R.drawable.sharukh_khan, name = "Sharukh Khan"),
+    )
+    Column {
+        Text(
+            text = "Favorites",
+            fontSize = 20.sp,
+            fontWeight = FontWeight.Bold,
+            modifier = Modifier.padding(bottom = 8.dp)
+        )
+        Row(
+            modifier = Modifier
+                .fillMaxWidth()
+                .horizontalScroll(rememberScrollState())
+        )
+        {
+            sampleFavorites.forEach {
+                FavoritesItem(favorites = it)
+            }
+        }
+    }
+}
+
+data class FavoritesContact(
+    val image: Int, val name: String
+)
+
+
+
+
+
+
Index: app/src/main/java/com/example/whatsapp/presentation/callscreen/Call.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/whatsapp/presentation/callscreen/Call.kt b/app/src/main/java/com/example/whatsapp/presentation/callscreen/Call.kt
new file mode 100644
--- /dev/null	(date 1758633772048)
+++ b/app/src/main/java/com/example/whatsapp/presentation/callscreen/Call.kt	(date 1758633772048)
@@ -0,0 +1,5 @@
+package com.example.whatsapp.presentation.callscreen
+
+data class Call(
+    val image: Int, val name: String, val time: String, val isMissed: Boolean
+)
Index: app/src/main/java/com/example/whatsapp/presentation/updatescreen/UpdateScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.whatsapp.presentation.updatescreen\r\n\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.rememberScrollState\r\nimport androidx.compose.foundation.verticalScroll\r\nimport androidx.compose.material3.FloatingActionButton\r\nimport androidx.compose.material3.HorizontalDivider\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.res.colorResource\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport com.example.whatsapp.R\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.whatsapp.presentation.bottomnavigation.BottomNavigation\r\n\r\n\r\n@Composable\r\n@Preview(showSystemUi = true)\r\nfun UpdateScreen(){\r\n    val scrollState = rememberScrollState()\r\n    val sampleStatus = listOf(\r\n        StatusData(image = R.drawable.bhuvan_bam, name = \"Bhuvan Bam\", time = \"10:00 AM\"),\r\n        StatusData(image = R.drawable.mrbeast, name = \"Mr.Beast\", time = \"2 min ago\"),\r\n        StatusData(image = R.drawable.rashmika, name = \"Huu Huy\", time = \"15 min ago\"),\r\n    )\r\n    val sampleChannels = listOf(\r\n        Channels(image = R.drawable.neat_roots, name = \"Neat Roots\", description = \"This is Neat Roots\"),\r\n        Channels(image = R.drawable.neat_roots, name = \"Neat Roots\", description = \"This is Neat Roots\"),\r\n        Channels(image = R.drawable.neat_roots, name = \"Neat Roots\", description = \"This is Neat Roots\")\r\n\r\n    )\r\n\r\n\r\n    Scaffold(\r\n        floatingActionButton = {\r\n            FloatingActionButton(onClick = {}, containerColor = colorResource(id = R.color.light_green),\r\n                modifier = Modifier.size(65.dp),\r\n                contentColor = Color.White) {\r\n                Icon(painter = painterResource(id = R.drawable.baseline_photo_camera_24), contentDescription = null)\r\n\r\n            }\r\n        }, bottomBar = { BottomNavigation() },\r\n        topBar = {TopBar()}\r\n    ) {\r\n\r\n        Column(modifier = Modifier.padding(it).fillMaxWidth().verticalScroll(scrollState)) {\r\n            Text(text = \"Status\", fontSize = 20.sp, fontWeight = FontWeight.Bold, color = Color.Black, modifier = Modifier.padding(horizontal = 12.dp, vertical = 8.dp))\r\n            MyStatus()\r\n            sampleStatus.forEach { data ->\r\n                StatusItem(statusData = data) }\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            HorizontalDivider(color = Color.Gray)\r\n            Text(text = \"Channels\", fontSize = 20.sp, fontWeight = FontWeight.Bold, color = Color.Black, modifier = Modifier.padding(horizontal = 12.dp, vertical = 8.dp))\r\n            Spacer(modifier = Modifier.height(8.dp))\r\n\r\n            Column(modifier = Modifier.padding(horizontal = 16.dp)) {\r\n                Text(text = \"Stay updated on topics that matter to you. Find your channels to follow below\")\r\n                Spacer(modifier = Modifier.height(32.dp))\r\n                Text(text = \"Find channels to follow\")\r\n\r\n                Spacer(modifier = Modifier.height(16.dp))\r\n                sampleChannels.forEach { data ->\r\n                    ChannelItemDesign(channels = data) }\r\n\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/whatsapp/presentation/updatescreen/UpdateScreen.kt b/app/src/main/java/com/example/whatsapp/presentation/updatescreen/UpdateScreen.kt
--- a/app/src/main/java/com/example/whatsapp/presentation/updatescreen/UpdateScreen.kt	(revision 40d57ae8197c09f02789a84796e9967bb9ebd6a6)
+++ b/app/src/main/java/com/example/whatsapp/presentation/updatescreen/UpdateScreen.kt	(date 1758641750881)
@@ -28,7 +28,7 @@
 
 @Composable
 @Preview(showSystemUi = true)
-fun UpdateScreen(){
+fun UpdateScreen() {
     val scrollState = rememberScrollState()
     val sampleStatus = listOf(
         StatusData(image = R.drawable.bhuvan_bam, name = "Bhuvan Bam", time = "10:00 AM"),
@@ -36,33 +36,68 @@
         StatusData(image = R.drawable.rashmika, name = "Huu Huy", time = "15 min ago"),
     )
     val sampleChannels = listOf(
-        Channels(image = R.drawable.neat_roots, name = "Neat Roots", description = "This is Neat Roots"),
-        Channels(image = R.drawable.neat_roots, name = "Neat Roots", description = "This is Neat Roots"),
-        Channels(image = R.drawable.neat_roots, name = "Neat Roots", description = "This is Neat Roots")
+        Channels(
+            image = R.drawable.neat_roots,
+            name = "Neat Roots",
+            description = "This is Neat Roots"
+        ),
+        Channels(
+            image = R.drawable.neat_roots,
+            name = "Neat Roots",
+            description = "This is Neat Roots"
+        ),
+        Channels(
+            image = R.drawable.neat_roots,
+            name = "Neat Roots",
+            description = "This is Neat Roots"
+        )
 
     )
 
 
     Scaffold(
         floatingActionButton = {
-            FloatingActionButton(onClick = {}, containerColor = colorResource(id = R.color.light_green),
+            FloatingActionButton(
+                onClick = {}, containerColor = colorResource(id = R.color.light_green),
                 modifier = Modifier.size(65.dp),
-                contentColor = Color.White) {
-                Icon(painter = painterResource(id = R.drawable.baseline_photo_camera_24), contentDescription = null)
+                contentColor = Color.White
+            ) {
+                Icon(
+                    painter = painterResource(id = R.drawable.baseline_photo_camera_24),
+                    contentDescription = null
+                )
 
             }
         }, bottomBar = { BottomNavigation() },
-        topBar = {TopBar()}
+        topBar = { TopBar() }
     ) {
 
-        Column(modifier = Modifier.padding(it).fillMaxWidth().verticalScroll(scrollState)) {
-            Text(text = "Status", fontSize = 20.sp, fontWeight = FontWeight.Bold, color = Color.Black, modifier = Modifier.padding(horizontal = 12.dp, vertical = 8.dp))
+        Column(
+            modifier = Modifier
+                .padding(it)
+                .fillMaxWidth()
+                .verticalScroll(scrollState)
+        ) {
+            Text(
+                text = "Status",
+                fontSize = 20.sp,
+                fontWeight = FontWeight.Bold,
+                color = Color.Black,
+                modifier = Modifier.padding(horizontal = 12.dp, vertical = 8.dp)
+            )
             MyStatus()
             sampleStatus.forEach { data ->
-                StatusItem(statusData = data) }
+                StatusItem(statusData = data)
+            }
             Spacer(modifier = Modifier.height(16.dp))
             HorizontalDivider(color = Color.Gray)
-            Text(text = "Channels", fontSize = 20.sp, fontWeight = FontWeight.Bold, color = Color.Black, modifier = Modifier.padding(horizontal = 12.dp, vertical = 8.dp))
+            Text(
+                text = "Channels",
+                fontSize = 20.sp,
+                fontWeight = FontWeight.Bold,
+                color = Color.Black,
+                modifier = Modifier.padding(horizontal = 12.dp, vertical = 8.dp)
+            )
             Spacer(modifier = Modifier.height(8.dp))
 
             Column(modifier = Modifier.padding(horizontal = 16.dp)) {
@@ -72,7 +107,8 @@
 
                 Spacer(modifier = Modifier.height(16.dp))
                 sampleChannels.forEach { data ->
-                    ChannelItemDesign(channels = data) }
+                    ChannelItemDesign(channels = data)
+                }
 
 
             }
